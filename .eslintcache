[{"C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\App.js":"3","C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\BreakInterval.js":"4","C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\Timer.js":"5","C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\SessionInterval.js":"6","C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\index.js":"7","C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\reportWebVitals.js":"8","C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\App.js":"9","C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\SessionInterval.js":"10","C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\BreakInterval.js":"11","C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\Timer.js":"12"},{"size":446,"mtime":1610325320981,"results":"13","hashOfConfig":"14"},{"size":361,"mtime":1610325331477,"results":"15","hashOfConfig":"14"},{"size":3124,"mtime":1610339270608,"results":"16","hashOfConfig":"14"},{"size":881,"mtime":1610339092813,"results":"17","hashOfConfig":"14"},{"size":3177,"mtime":1610339091411,"results":"18","hashOfConfig":"14"},{"size":903,"mtime":1610339259806,"results":"19","hashOfConfig":"14"},{"size":446,"mtime":1610325320981,"results":"20","hashOfConfig":"21"},{"size":361,"mtime":1610325331477,"results":"22","hashOfConfig":"21"},{"size":3138,"mtime":1610339544543,"results":"23","hashOfConfig":"21"},{"size":903,"mtime":1610339259806,"results":"24","hashOfConfig":"21"},{"size":881,"mtime":1610339092813,"results":"25","hashOfConfig":"21"},{"size":3130,"mtime":1610339554910,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"12cm7tl",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qur13",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\index.js",[],["55","56"],"C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\App.js",["57"],"import React from \"react\";\nimport '../App.css';\nimport BreakInterval from './BreakInterval';\nimport SessionInterval from './SessionInterval';\nimport Timer from './Timer';\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      TimerMinute: 25,\n      isPlay: false\n    };\n\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onUpdateTimerMinute = this.onUpdateTimerMinute.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onPlay = this.onPlay.bind(this);\n  }\n\n  onIncreaseBreakLength(){\n    this.setState((prevState) => {\n      return{\n        breakLength: prevState.breakLength + 1\n      }\n    });\n  }\n\n  onDecreaseBreakLength(){\n    this.setState((prevState) => {\n      return{\n        breakLength: prevState.breakLength - 1\n      }\n    });\n  }\n\n  onIncreaseSessionLength(){\n    this.setState((prevState) => {\n      return{\n        sessionLength: prevState.sessionLength + 1,\n        TimerMinute: prevState.sessionLength + 1\n      }\n    });\n  }\n\n  onDecreaseSessionLength(){\n    this.setState((prevState) => {\n      return{\n        sessionLength: prevState.sessionLength - 1,\n        TimerMinute: prevState.sessionLength - 1\n      }\n    });\n  }\n\n  onUpdateTimerMinute(){\n    this.setState((prevState) => {\n      return{\n        TimerMinute: prevState.TimerMinute - 1\n      }\n    });\n  }\n\n  onToggleInterval(isSession){\n    if(isSession){\n      this.setState({\n        TimerMinute: this.state.sessionLength\n      })\n    }else{\n      this.setState({\n        TimerMinute: this.state.breakLength\n      })\n    }\n  }\n\n  onReset(){\n    this.setState({\n      TimerMinute: this.state.sessionLength\n    })\n  }\n\n  onPlay(isPlay){\n    this.setState({\n      isPlay: isPlay\n    })\n  }\n  render(){\n    return (\n      <main>\n        <h2>Pomodoro Timer</h2>\n        <img src = \"unnamed.png\"></img>\n        <section className = \"IntervalLengthContainer\">\n          <BreakInterval \n          isPlay = {this.state.isPlay}\n          BreakInterval={this.state.breakLength} \n          increaseBreak={this.onIncreaseBreakLength} \n          decreaseBreak={this.onDecreaseBreakLength}\n          />\n          <SessionInterval \n          isPlay = {this.state.isPlay}\n          SessionInterval={this.state.sessionLength}\n          increaseSession={this.onIncreaseSessionLength}\n          decreaseSession={this.onDecreaseSessionLength}\n          />\n        </section>\n        <Timer \n        isPlay = {this.state.isPlay}\n        TimerMinute = {this.state.TimerMinute}\n        breakLength = {this.state.breakLength}\n        UpdateTimerMinute = {this.onUpdateTimerMinute}\n        onToggleInterval = {this.onToggleInterval}\n        resetTimer={this.onReset}\n        onPlay={this.onPlay}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;","C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\BreakInterval.js",[],"C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\Timer.js",["58"],"import React from 'react'\r\nimport testUtils from 'react-dom/test-utils';\r\n\r\nclass Timer extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isSession: true,\r\n            TimerSecond: 0,\r\n            intervalID: 0\r\n        };\r\n\r\n        this.start = this.start.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n        this.restart = this.restart.bind(this);\r\n        this.decreaseTimer = this.decreaseTimer.bind(this);\r\n    }\r\n\r\n    start(){\r\n        let intervalID = setInterval(this.decreaseTimer, 1000);\r\n        this.props.onPlay(true);\r\n        this.setState({\r\n            intervalID: intervalID\r\n        })\r\n    }\r\n\r\n    decreaseTimer(){\r\n        switch(this.state.TimerSecond){\r\n            case 0:\r\n                if(this.props.TimerMinute === 0){\r\n                    if(this.state.isSession){\r\n                        this.setState({\r\n                            isSession: false\r\n                        });\r\n                        this.props.onToggleInterval(this.state.isSession);\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            isSession: true\r\n                        });\r\n                        this.props.onToggleInterval(this.state.isSession);\r\n                    }\r\n                }else{\r\n                this.props.UpdateTimerMinute()\r\n                this.setState({\r\n                    TimerSecond: 59\r\n                })\r\n            }\r\n                break;\r\n            default:\r\n                this.setState((prevState) =>{\r\n                    return{\r\n                        TimerSecond: prevState.TimerSecond - 1\r\n                    }\r\n                })\r\n                break;\r\n        }\r\n    \r\n    }\r\n\r\n    stop(){\r\n        clearInterval(this.state.intervalID);\r\n        this.props.onPlay(false);\r\n    }\r\n\r\n    restart(){\r\n        this.stop();\r\n        this.props.resetTimer();\r\n        this.props.onPlay(false);\r\n        this.setState({\r\n            TimerSecond: 0,\r\n            isSession: true\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <section>\r\n                <section className=\"TimerContainer\">\r\n                    <h4>{this.state.isSession === true ? \"Session Time\" : \"Break Time\"}</h4>\r\n                    <span className=\"timer\">{this.props.TimerMinute}</span>\r\n                    <span className=\"timer\">:</span>\r\n                    <span className=\"timer\">\r\n                        {this.state.TimerSecond === 0 ? \r\n                        \"00\" \r\n                        : this.state.TimerSecond < 10 \r\n                        ? \"0\" + this.state.TimerSecond \r\n                        : this.state.TimerSecond}</span>\r\n                </section>\r\n                <section className=\"timer-action\">\r\n                        <button disabled={this.props.isPlay === true ? \"disabled\" : \"\"} onClick={this.start}>Start</button>\r\n                        <button onClick={this.stop}>Stop</button>\r\n                        <button onClick={this.restart}>Restart</button>\r\n                </section>\r\n            </section>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;",["59","60"],"C:\\Users\\Admin\\Desktop\\JSP\\pomodoro-project\\src\\components\\SessionInterval.js",[],"C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\index.js",[],"C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\App.js",[],"C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\SessionInterval.js",[],"C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\BreakInterval.js",[],"C:\\Users\\Admin\\desktop\\JSP\\pomodoro-project\\src\\components\\Timer.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":96,"column":9,"nodeType":"67","endLine":96,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":17},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'testUtils' is defined but never used.","Identifier","unusedVar",["74"],["75"],"no-global-assign","no-unsafe-negation"]